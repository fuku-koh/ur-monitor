# .github/workflows/ur-monitor.yml
name: UR Monitor

on:
  schedule:
    - cron: "3-59/10 * * * *"   # :03,13,23,33,43,53
    - cron: "8-59/10 * * * *"   # :08,18,28,38,48,58（冗長化・混雑分散）
    - cron: "30 0 * * *"        # JST 09:30 ぴったり（UTC 00:30）
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: ur-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  run:
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        prop_id: [ "7080", "6940", "5390" ]

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Window gate (JST 09:30–19:00 only)
        id: gate
        shell: bash
        run: |
          jst_hm=$(TZ=Asia/Tokyo date +%H%M)
          echo "JST now: $jst_hm"
          if (( 10#$jst_hm >= 930 && 10#$jst_hm < 1900 )); then
            echo "inwindow=true"  >> "$GITHUB_OUTPUT"
          else
            echo "inwindow=false" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/setup-python@v5
        if: steps.gate.outputs.inwindow == 'true'
        with:
          python-version: '3.11'

      - name: Install deps
        if: steps.gate.outputs.inwindow == 'true'
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Run monitor (${{ matrix.prop_id }})
        if: steps.gate.outputs.inwindow == 'true'
        env:
          PROP_ID: ${{ matrix.prop_id }}
          STATE_FILE: .state-${{ matrix.prop_id }}.json
          CHATWORK_TOKEN: ${{ secrets.CHATWORK_TOKEN }}
          CHATWORK_ROOM_ID: ${{ secrets.CHATWORK_ROOM_ID }}
        run: python ur_monitor.py

      - name: Persist state (${{ matrix.prop_id }})
        if: steps.gate.outputs.inwindow == 'true'
        shell: bash
        env:
          PROP_ID: ${{ matrix.prop_id }}
        run: |
          set -e
          git config user.name  "ur-monitor-bot"
          git config user.email "bot@example.com"

          f=".state-${PROP_ID}.json"
          git add "$f" || true
          if git diff --cached --quiet -- "$f"; then
            echo "no state changes"
            exit 0
          fi

          branch="${GITHUB_REF_NAME:-main}"
          git fetch origin "$branch"
          git pull --rebase origin "$branch" || true
          git commit -m "state update (${PROP_ID})" || true
          git push origin "HEAD:${branch}"
