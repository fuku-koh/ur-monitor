# .github/workflows/watchdog.yml
name: watchdog
on:
  schedule:
    - cron: "*/3 * * * *"
  workflow_dispatch: {}

permissions:
  contents: read
  actions: read

jobs:
  ensure-ur-monitor:
    runs-on: ubuntu-24.04
    steps:
      - name: 現在がJST 09:30–19:00か判定
        id: gate
        shell: bash
        run: |
          jst_hm=$(TZ=Asia/Tokyo date +%H%M)
          echo "JST now: $jst_hm"
          if (( 10#$jst_hm < 930 || 10#$jst_hm >= 1900 )); then
            echo "outside=true" >> "$GITHUB_OUTPUT"
          fi

      - name: 直近の実行時刻を取得（UR Monitor）
        if: steps.gate.outputs.outside != 'true'
        id: last
        env:
          GH_TOKEN: ${{ secrets.PAT_WORKFLOW }}   # repo + workflow scope 必須
        shell: bash
        run: |
          set -e
          repo="${GITHUB_REPOSITORY}"
          wf_path=".github/workflows/ur-monitor.yml"
          wf_id=$(gh api /repos/$repo/actions/workflows --jq \
                 ".workflows[] | select(.path==\"$wf_path\").id" || true)

          if [ -z "$wf_id" ]; then
            echo "stale=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          last_created_at=$(gh api /repos/$repo/actions/workflows/$wf_id/runs \
            -f per_page=1 --jq '.workflow_runs[0].created_at' || true)
          echo "last_created_at=${last_created_at:-<none>}"

          if [ -z "$last_created_at" ] || [ "$last_created_at" = "null" ] \
             || ! date -u -d "$last_created_at" >/dev/null 2>&1; then
            echo "stale=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          last_ts=$(date -u -d "$last_created_at" +%s)
          now_ts=$(date -u +%s)
          diff=$(( now_ts - last_ts ))
          echo "diff_sec=$diff"

          # 9分以上空いていれば“穴”
          if [ $diff -ge $((9*60)) ]; then
            echo "stale=true" >> "$GITHUB_OUTPUT"
          fi

        # バックアップ発火 step だけ差し替え
      - name: バックアップ発火（workflow_dispatch）
        if: steps.gate.outputs.outside != 'true' && steps.last.outputs.stale == 'true'
        env:
         GH_TOKEN: ${{ secrets.PAT_WORKFLOW }}
        shell: bash
        run: |
          branch=$(gh repo view --json defaultBranchRef -q .defaultBranchRef.name 2>/dev/null || echo "main")
          echo "dispatch ur-monitor on $branch"
          gh api -X POST \
            /repos/${GITHUB_REPOSITORY}/actions/workflows/ur-monitor.yml/dispatches \
            -f ref="$branch"
