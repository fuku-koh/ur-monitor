name: watchdog

on:
  schedule:
    # :01,06,11,16,21,26,31,36,41,46,51,56（UTC）…混雑:00/05/10/…を避ける
    - cron: "1-59/5 * * * *"
  workflow_dispatch: {}

permissions:
  contents: read
  actions: write   # ← dispatch するので write 必須

jobs:
  ensure-ur-monitor:
    runs-on: ubuntu-24.04
    steps:
      - name: 現在がJST 09:30–19:00か判定
        id: gate
        shell: bash
        run: |
          jst_hm=$(TZ=Asia/Tokyo date +%H%M)
          if (( 10#$jst_hm < 930 || 10#$jst_hm >= 1900 )); then
            echo "outside=true" >> "$GITHUB_OUTPUT"
            echo "outside window (JST $jst_hm)"
          else
            echo "inside window (JST $jst_hm)"
          fi

      - name: 直近の実行時刻を取得（UR Monitor）
        if: steps.gate.outputs.outside != 'true'
        id: last
        env:
          GH_TOKEN: ${{ github.token }}  # ← PAT不要
        shell: bash
        run: |
          set -euo pipefail
          sleep $((RANDOM % 15))  # 競合ジッタ

          repo="${GITHUB_REPOSITORY}"
          wf_path=".github/workflows/ur-monitor.yml"  # 実際のファイル名に合わせること

          # workflow ID をパスで取得（404等は stale 扱い）
          wf_id=$(gh api /repos/$repo/actions/workflows --jq \
                   ".workflows[] | select(.path==\"$wf_path\").id" 2>/dev/null || true)
          if [ -z "${wf_id:-}" ]; then
            echo "wf_id missing -> stale"
            echo "stale=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # completed(success/failure) の最新ランの updated_at を見る
          last_good=$(gh api /repos/$repo/actions/workflows/$wf_id/runs \
                       -f per_page=50 \
                       --jq '[.workflow_runs[]
                              | select(.status=="completed"
                                       and (.conclusion=="success" or .conclusion=="failure"))]
                             | .[0].updated_at' 2>/dev/null || true)
          echo "last_good=${last_good:-<none>}"

          # 値が取れない・パース不可は stale
          if [ -z "${last_good:-}" ] || ! date -u -d "$last_good" >/dev/null 2>&1; then
            echo "stale=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          last_ts=$(date -u -d "$last_good" +%s)
          now_ts=$(date -u +%s)
          # 12分以上空いていたら穴
          if [ $last_ts -lt $(( now_ts - 12*60 )) ]; then
            echo "stale=true" >> "$GITHUB_OUTPUT"
          fi

      - name: バックアップ発火（workflow_dispatch）
        if: steps.gate.outputs.outside != 'true' && steps.last.outputs.stale == 'true'
        env:
          GH_TOKEN: ${{ github.token }}
        shell: bash
        run: |
          branch=$(gh repo view --json defaultBranchRef -q .defaultBranchRef.name 2>/dev/null || echo "main")
          echo "dispatch ur-monitor on $branch"
          gh api -X POST \
            /repos/${GITHUB_REPOSITORY}/actions/workflows/ur-monitor.yml/dispatches \
            -f ref="$branch"
